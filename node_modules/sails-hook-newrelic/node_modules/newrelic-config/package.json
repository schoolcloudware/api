{
  "name": "newrelic-config",
  "description": "Newrelic configurator",
  "version": "0.1.0",
  "author": {
    "name": "Adam Rudd"
  },
  "contributors": [
    {
      "name": "Kiko Beats",
      "url": "https://github.com/kikobeats"
    }
  ],
  "dependencies": {
    "newrelic": ">=0.9.20"
  },
  "keywords": [
    "configurator",
    "new",
    "newrelic",
    "relic",
    "setup",
    "tool"
  ],
  "license": "BSD",
  "main": "index.js",
  "repository": "",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "gitHead": "90d7a86e6d26364cfe4ea8d0b2e3289eb7708802",
  "readme": "# newrelic-config\n\n## Introduction\n\nnewrelic-config is a newrelic configurator, wrapping node-newrelic.\nIt simplifies the default configuration scheme into a chainable API.\n\n## Dependencies\n\n* [newrelic](https://github.com/newrelic/node-newrelic)\n\n## Example\n\nMinimal required:\n\n    require('newrelic-config')\n      .key('<your api key>')\n      .name('<your app name>')\n      .profile();\n\nComplete example:\n\n    require('newrelic-config')\n      .key('<your api key>')\n      .name('<your app name>')\n      .log('/dev/null', 'trace')\n      .proxy('localhost', 8080)\n      .errors([404, 401])\n      .profile();\n\nConditional configuration:\n\n    require('newrelic-config')\n      .key('<key>')\n      .name(process.env.NODE_ENV === 'production' ? 'app' : 'app-dev')\n      .profile()\n\nUsing environment variables:\n\n    require('newrelic-config')\n      .key(process.env['NEWRELIC_KEY'])\n      .name(process.env['NEWRELIC_APP_NAME'])\n      .profile()\n\nUsing a config file:\n\n    var config = require('./config');\n\n    require('newrelic-config')\n      .key(config.newrelic.key)\n      .name(config.newrelic.name)\n      .profile();\n\n## Methods\n\n### NewRelic#name(name)\n\nSet new relic app name\n\n### NewRelic#key(key)\n\nSet new relic license key\n\n### NewRelic#log(dest, level, ignore)\n\nSet new relic logging options\n\n* `dest` - log destination (file, `stderr` or `stdout`)\n* `level` - logging level, option of `error`, `warn`, `info`, `debug` or `trace`\n* `ignore` â€“ list of comma-delimited patterns, for example `'^/socket\\.io/.*/xhr-polling,ignore_me'`\n\n### NewRelic#proxy(host, port)\n\nSet proxy options\n\n* `host` - proxy hostname\n* `port` - proxy port\n\n### NewRelic#errors(ignored)\n\nEnable error tracing\n\n* `ignored` - error codes to ignore\n\n### NewRelic#profile() \n\nStart profiling!\n",
  "readmeFilename": "README.md",
  "_id": "newrelic-config@0.1.0",
  "_shasum": "bd5a4cbb219f9220aefdb7cc2ddee2aa1fc38fa2",
  "_from": "git://github.com/Kikobeats/newrelic-config.git",
  "_resolved": "git://github.com/Kikobeats/newrelic-config.git#90d7a86e6d26364cfe4ea8d0b2e3289eb7708802",
  "_fromGithub": true
}
